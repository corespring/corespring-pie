#!/usr/bin/env node

/**
 * removes assets generated by pie pack in the docs/demo dirs.
 */

const rimraf = require('rimraf');
const fs = require('fs');

const rm = (glob) => {
  console.log('glob: ', glob);
  return new Promise((resolve, reject) => {
    rimraf(glob, (e) => {
      if(e){
        reject(e);
      } else {
        resolve()
      }
    });
  })
}

const rmDemoAssets = pkg => {
  console.log('pkg: ', pkg);

  return Promise.all([
    rm(`packages/${pkg}/docs/demo/*.{ttf,eot,woff,woff2,svg,otf}`),
    rm(`packages/${pkg}/docs/demo/.pie`),
    rm(`packages/${pkg}/docs/demo/pie-catalog.bundle.js`),
    rm(`packages/${pkg}/docs/demo/pie-item.tar.gz`)
  ]);
}

const getChildren = () => new Promise( (resolve, reject) => {
  fs.readdir('packages', (e, files) => {
    if(e) {
      reject(e);
    } else {
      resolve(files)
    }
  });
});

const run = async () => {
  const pkgs = await getChildren();
  const promises = pkgs.map(p => rmDemoAssets(p));
  return Promise.all(promises);
}

run()
  .then(() => console.log('done'))
  .catch(e => console.error(e));